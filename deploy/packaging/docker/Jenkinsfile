node {
   // Mark the code checkout 'stage'....
   //stage 'Checkout'
   // Get GeoWave source from GitHub repository
 // git url: 'https://github.com/ngageoint/geowave.git'
  // checkout([$class: 'GitSCM', branches: [[name: '*/docker-rpm']], doGenerateSubmoduleConfigurations: false, extensions: [[$class: 'CloneOption', noTags: true, reference: '', shallow: true]], submoduleCfg: [], userRemoteConfigs: [[url: 'https://github.com/ngageoint/geowave.git']]])
   // Mark the create docker image 'stage'....
   stage 'Create Docker Image'
   // Build the docker container
   sh 'docker build -t ngageoint/geowave-centos6-java8-build -f deploy/packaging/docker/geowave-centos6-java8-build.dockerfile deploy/packaging/docker'   
   sh 'docker build -t ngageoint/geowave-centos6-rpm-build -f deploy/packaging/docker/geowave-centos6-rpm-build.dockerfile deploy/packaging/docker'
   //def java8Img = docker.build('geowave/deploy/packaging/docker/geowave-centos6-java8-build.dockerfile', 'geowave/deploy/packaging/docker')
   //def rpmImg = docker.build('geowave/deploy/packaging/docker/geowave-centos6-rpm-build.dockerfile', 'geowave/deploy/packaging/docker')
   // Mark the build artifacts 'stage'....
   stage 'Build Artifacts'
   sh 'deploy/packaging/docker/docker-build-rpms.sh'
}